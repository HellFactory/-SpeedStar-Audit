/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Pack, PackInterface } from "../Pack";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c1d38038062001c1d83398101604081905262000034916200023a565b8181620000413362000077565b815162000056906001906020850190620000c7565b5080516200006c906002906020840190620000c7565b5050505050620002e1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000d590620002a4565b90600052602060002090601f016020900481019282620000f9576000855562000144565b82601f106200011457805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014457825182559160200191906001019062000127565b506200015292915062000156565b5090565b5b8082111562000152576000815560010162000157565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019557600080fd5b81516001600160401b0380821115620001b257620001b26200016d565b604051601f8301601f19908116603f01168101908282118183101715620001dd57620001dd6200016d565b81604052838152602092508683858801011115620001fa57600080fd5b600091505b838210156200021e5785820183015181830184015290820190620001ff565b83821115620002305760008385830101525b9695505050505050565b600080604083850312156200024e57600080fd5b82516001600160401b03808211156200026657600080fd5b620002748683870162000183565b935060208501519150808211156200028b57600080fd5b506200029a8582860162000183565b9150509250929050565b600181811c90821680620002b957607f821691505b60208210811415620002db57634e487b7160e01b600052602260045260246000fd5b50919050565b61192c80620002f16000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636c0360eb116100ad578063a22cb46511610071578063a22cb4651461024c578063b88d4fde1461025f578063c87b56dd14610272578063e985e9c514610285578063f2fde38b146102c157600080fd5b80636c0360eb1461020257806370a082311461020a578063715018a61461022b5780638da5cb5b1461023357806395d89b411461024457600080fd5b806323b872dd116100f457806323b872dd146101a357806342842e0e146101b657806355f804b3146101c95780636352211e146101dc5780636a627842146101ef57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b6101396101343660046113d2565b6102d4565b60405190151581526020015b60405180910390f35b610156610326565b604051610145919061144e565b610176610171366004611461565b6103b8565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611496565b610452565b005b6101a16101b13660046114c0565b610568565b6101a16101c43660046114c0565b6105e3565b6101a16101d7366004611588565b6105fe565b6101766101ea366004611461565b61066f565b6101a16101fd3660046115d1565b6106e6565b610156610765565b61021d6102183660046115d1565b6107f3565b604051908152602001610145565b6101a161087a565b6000546001600160a01b0316610176565b6101566108e0565b6101a161025a3660046115ec565b6108ef565b6101a161026d366004611628565b6108fa565b610156610280366004611461565b61097c565b6101396102933660046116a4565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6101a16102cf3660046115d1565b610a15565b60006001600160e01b031982166380ac58cd60e01b148061030557506001600160e01b03198216635b5e139f60e01b145b8061032057506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060018054610335906116d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610361906116d7565b80156103ae5780601f10610383576101008083540402835291602001916103ae565b820191906000526020600020905b81548152906001019060200180831161039157829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b03166104365760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061045d8261066f565b9050806001600160a01b0316836001600160a01b031614156104cb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161042d565b336001600160a01b03821614806104e757506104e78133610293565b6105595760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161042d565b6105638383610ae0565b505050565b6105723382610b4e565b6105d85760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606482015260840161042d565b610563838383610c45565b610563838383604051806020016040528060008152506108fa565b6000546001600160a01b031633146106585760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042d565b805161066b906009906020840190611323565b5050565b6000818152600360205260408120546001600160a01b0316806103205760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161042d565b6000546001600160a01b031633146107405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042d565b600061074b60085490565b90506107578282610de5565b61066b600880546001019055565b60098054610772906116d7565b80601f016020809104026020016040519081016040528092919081815260200182805461079e906116d7565b80156107eb5780601f106107c0576101008083540402835291602001916107eb565b820191906000526020600020905b8154815290600101906020018083116107ce57829003601f168201915b505050505081565b60006001600160a01b03821661085e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161042d565b506001600160a01b031660009081526004602052604090205490565b6000546001600160a01b031633146108d45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042d565b6108de6000610f27565b565b606060028054610335906116d7565b61066b338383610f77565b6109043383610b4e565b61096a5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606482015260840161042d565b61097684848484611046565b50505050565b6000818152600360205260409020546060906001600160a01b03166109e35760405162461bcd60e51b815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e00604482015260640161042d565b60096109ee836110c4565b6040516020016109ff92919061172e565b6040516020818303038152906040529050919050565b6000546001600160a01b03163314610a6f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042d565b6001600160a01b038116610ad45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042d565b610add81610f27565b50565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b158261066f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b0316610bc75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161042d565b6000610bd28361066f565b9050806001600160a01b0316846001600160a01b03161480610c0d5750836001600160a01b0316610c02846103b8565b6001600160a01b0316145b80610c3d57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610c588261066f565b6001600160a01b031614610cc05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161042d565b6001600160a01b038216610d225760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161042d565b610d2d600082610ae0565b6001600160a01b0383166000908152600460205260408120805460019290610d569084906117ff565b90915550506001600160a01b0382166000908152600460205260408120805460019290610d84908490611816565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610e3b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161042d565b6000818152600360205260409020546001600160a01b031615610ea05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042d565b6001600160a01b0382166000908152600460205260408120805460019290610ec9908490611816565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b03161415610fd95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161042d565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611051848484610c45565b61105d848484846111da565b6109765760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161042d565b6060816110e85750506040805180820190915260018152600360fc1b602082015290565b8160005b811561111257806110fc8161182e565b915061110b9050600a8361185f565b91506110ec565b60008167ffffffffffffffff81111561112d5761112d6114fc565b6040519080825280601f01601f191660200182016040528015611157576020820181803683370190505b5090505b8415610c3d5761116c6001836117ff565b9150611179600a86611873565b611184906030611816565b60f81b81838151811061119957611199611887565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506111d3600a8661185f565b945061115b565b60006001600160a01b0384163b1561131857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061121e90339089908890889060040161189d565b6020604051808303816000875af1925050508015611259575060408051601f3d908101601f19168201909252611256918101906118d9565b60015b6112fe573d808015611287576040519150601f19603f3d011682016040523d82523d6000602084013e61128c565b606091505b5080516112f65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161042d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c3d565b506001949350505050565b82805461132f906116d7565b90600052602060002090601f0160209004810192826113515760008555611397565b82601f1061136a57805160ff1916838001178555611397565b82800160010185558215611397579182015b8281111561139757825182559160200191906001019061137c565b506113a39291506113a7565b5090565b5b808211156113a357600081556001016113a8565b6001600160e01b031981168114610add57600080fd5b6000602082840312156113e457600080fd5b81356113ef816113bc565b9392505050565b60005b838110156114115781810151838201526020016113f9565b838111156109765750506000910152565b6000815180845261143a8160208601602086016113f6565b601f01601f19169290920160200192915050565b6020815260006113ef6020830184611422565b60006020828403121561147357600080fd5b5035919050565b80356001600160a01b038116811461149157600080fd5b919050565b600080604083850312156114a957600080fd5b6114b28361147a565b946020939093013593505050565b6000806000606084860312156114d557600080fd5b6114de8461147a565b92506114ec6020850161147a565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561152d5761152d6114fc565b604051601f8501601f19908116603f01168101908282118183101715611555576115556114fc565b8160405280935085815286868601111561156e57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561159a57600080fd5b813567ffffffffffffffff8111156115b157600080fd5b8201601f810184136115c257600080fd5b610c3d84823560208401611512565b6000602082840312156115e357600080fd5b6113ef8261147a565b600080604083850312156115ff57600080fd5b6116088361147a565b91506020830135801515811461161d57600080fd5b809150509250929050565b6000806000806080858703121561163e57600080fd5b6116478561147a565b93506116556020860161147a565b925060408501359150606085013567ffffffffffffffff81111561167857600080fd5b8501601f8101871361168957600080fd5b61169887823560208401611512565b91505092959194509250565b600080604083850312156116b757600080fd5b6116c08361147a565b91506116ce6020840161147a565b90509250929050565b600181811c908216806116eb57607f821691505b6020821081141561170c57634e487b7160e01b600052602260045260246000fd5b50919050565b600081516117248185602086016113f6565b9290920192915050565b600080845481600182811c91508083168061174a57607f831692505b602080841082141561176a57634e487b7160e01b86526022600452602486fd5b81801561177e576001811461178f576117bc565b60ff198616895284890196506117bc565b60008b81526020902060005b868110156117b45781548b82015290850190830161179b565b505084890196505b5050505050506117e06117cf8286611712565b64173539b7b760d91b815260050190565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611811576118116117e9565b500390565b60008219821115611829576118296117e9565b500190565b6000600019821415611842576118426117e9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261186e5761186e611849565b500490565b60008261188257611882611849565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526118cf6080830184611422565b9695505050505050565b6000602082840312156118eb57600080fd5b81516113ef816113bc56fea2646970667358221220acd4f4879b871366e64519e165a8cfdbd02d24fbffedb3d4674dc9b9d2dc0d9964736f6c634300080b0033";

export class Pack__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Pack> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Pack>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): Pack {
    return super.attach(address) as Pack;
  }
  connect(signer: Signer): Pack__factory {
    return super.connect(signer) as Pack__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PackInterface {
    return new utils.Interface(_abi) as PackInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pack {
    return new Contract(address, _abi, signerOrProvider) as Pack;
  }
}
