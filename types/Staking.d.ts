/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface StakingInterface extends ethers.utils.Interface {
  functions: {
    "BONUS_MULTIPLIER()": FunctionFragment;
    "adminWithDrawHorse(address,uint256)": FunctionFragment;
    "adminWithDrawStable(address,uint256)": FunctionFragment;
    "claim()": FunctionFragment;
    "claimNativeToken()": FunctionFragment;
    "claimToken(address)": FunctionFragment;
    "depositFacility(uint256)": FunctionFragment;
    "depositHorse(uint256)": FunctionFragment;
    "depositHorseInStable(uint256,uint256)": FunctionFragment;
    "depositStable(uint256)": FunctionFragment;
    "depositStar(uint256)": FunctionFragment;
    "emergencyWithdrawHorse(uint256)": FunctionFragment;
    "getHorseInStable(address,uint256)": FunctionFragment;
    "getMultiplier(uint256,uint256)": FunctionFragment;
    "getPendingSpeed(address)": FunctionFragment;
    "getPlotAvaliable(address)": FunctionFragment;
    "getPopularityInStable(uint256)": FunctionFragment;
    "getUserDepositHorse(address)": FunctionFragment;
    "getUserDepositHorseInStable(address,uint256)": FunctionFragment;
    "getUserDepositStable(address)": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "owner()": FunctionFragment;
    "plot()": FunctionFragment;
    "poolInfo()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setPlotAddress(address)": FunctionFragment;
    "setSpeedPerBlock(uint256)": FunctionFragment;
    "speed()": FunctionFragment;
    "speedPerBlock()": FunctionFragment;
    "starBalance(address)": FunctionFragment;
    "startBlock()": FunctionFragment;
    "totalAllocPoint()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "updateMultiplier(uint256)": FunctionFragment;
    "updatePool()": FunctionFragment;
    "userInfo(address)": FunctionFragment;
    "userPlots(address)": FunctionFragment;
    "withdrawFacility(uint256)": FunctionFragment;
    "withdrawHorse(uint256)": FunctionFragment;
    "withdrawHorseInStable(uint256,uint256)": FunctionFragment;
    "withdrawStable(uint256)": FunctionFragment;
    "withdrawStar(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "BONUS_MULTIPLIER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "adminWithDrawHorse",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "adminWithDrawStable",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "claim", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "claimNativeToken",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "claimToken", values: [string]): string;
  encodeFunctionData(
    functionFragment: "depositFacility",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositHorse",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositHorseInStable",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositStable",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositStar",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "emergencyWithdrawHorse",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getHorseInStable",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getMultiplier",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPendingSpeed",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPlotAvaliable",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPopularityInStable",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserDepositHorse",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserDepositHorseInStable",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserDepositStable",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "plot", values?: undefined): string;
  encodeFunctionData(functionFragment: "poolInfo", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setPlotAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setSpeedPerBlock",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "speed", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "speedPerBlock",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "starBalance", values: [string]): string;
  encodeFunctionData(
    functionFragment: "startBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalAllocPoint",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateMultiplier",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updatePool",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "userInfo", values: [string]): string;
  encodeFunctionData(functionFragment: "userPlots", values: [string]): string;
  encodeFunctionData(
    functionFragment: "withdrawFacility",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawHorse",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawHorseInStable",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawStable",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawStar",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "BONUS_MULTIPLIER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminWithDrawHorse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminWithDrawStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "claim", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "claimNativeToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "claimToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "depositFacility",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositHorse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositHorseInStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositStar",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emergencyWithdrawHorse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getHorseInStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPendingSpeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPlotAvaliable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPopularityInStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserDepositHorse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserDepositHorseInStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserDepositStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "plot", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "poolInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPlotAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSpeedPerBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "speed", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "speedPerBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "starBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "startBlock", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalAllocPoint",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "updatePool", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "userInfo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "userPlots", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawFacility",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawHorse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawHorseInStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawStar",
    data: BytesLike
  ): Result;

  events: {
    "Claim(address,uint256)": EventFragment;
    "ClaimNativeToken(address,uint256)": EventFragment;
    "ClaimToken(address,address)": EventFragment;
    "DepositFacility(address,uint256,uint256)": EventFragment;
    "DepositHorse(address,uint256,uint256)": EventFragment;
    "DepositHorseInStable(address,uint256,uint256,uint256)": EventFragment;
    "DepositStable(address,uint256)": EventFragment;
    "DepositStar(address,uint256)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "SetSpeedPerBlock(address,uint256)": EventFragment;
    "UpdateMultiplier(uint256)": EventFragment;
    "WithdrawFacility(address,uint256,uint256)": EventFragment;
    "WithdrawHorse(address,uint256,uint256)": EventFragment;
    "WithdrawHorseInStable(address,uint256,uint256,uint256)": EventFragment;
    "WithdrawStable(address,uint256)": EventFragment;
    "WithdrawStar(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Claim"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ClaimNativeToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ClaimToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositFacility"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositHorse"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositHorseInStable"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositStable"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositStar"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetSpeedPerBlock"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpdateMultiplier"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawFacility"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawHorse"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawHorseInStable"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawStable"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawStar"): EventFragment;
}

export type ClaimEvent = TypedEvent<
  [string, BigNumber] & { user: string; amount: BigNumber }
>;

export type ClaimNativeTokenEvent = TypedEvent<
  [string, BigNumber] & { user: string; amount: BigNumber }
>;

export type ClaimTokenEvent = TypedEvent<
  [string, string] & { user: string; token: string }
>;

export type DepositFacilityEvent = TypedEvent<
  [string, BigNumber, BigNumber] & {
    user: string;
    tokenId: BigNumber;
    popularity: BigNumber;
  }
>;

export type DepositHorseEvent = TypedEvent<
  [string, BigNumber, BigNumber] & {
    user: string;
    popularity: BigNumber;
    tokenId: BigNumber;
  }
>;

export type DepositHorseInStableEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber] & {
    user: string;
    stableTokenId: BigNumber;
    popularity: BigNumber;
    horseTokenId: BigNumber;
  }
>;

export type DepositStableEvent = TypedEvent<
  [string, BigNumber] & { user: string; tokenId: BigNumber }
>;

export type DepositStarEvent = TypedEvent<
  [string, BigNumber] & { user: string; amount: BigNumber }
>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string] & { previousOwner: string; newOwner: string }
>;

export type SetSpeedPerBlockEvent = TypedEvent<
  [string, BigNumber] & { user: string; amount: BigNumber }
>;

export type UpdateMultiplierEvent = TypedEvent<
  [BigNumber] & { multiplierNumber: BigNumber }
>;

export type WithdrawFacilityEvent = TypedEvent<
  [string, BigNumber, BigNumber] & {
    user: string;
    tokenId: BigNumber;
    popularity: BigNumber;
  }
>;

export type WithdrawHorseEvent = TypedEvent<
  [string, BigNumber, BigNumber] & {
    user: string;
    tokenId: BigNumber;
    popularity: BigNumber;
  }
>;

export type WithdrawHorseInStableEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber] & {
    user: string;
    stableTokenId: BigNumber;
    popularity: BigNumber;
    horseTokenId: BigNumber;
  }
>;

export type WithdrawStableEvent = TypedEvent<
  [string, BigNumber] & { user: string; stableTokenId: BigNumber }
>;

export type WithdrawStarEvent = TypedEvent<
  [string, BigNumber] & { user: string; amount: BigNumber }
>;

export class Staking extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: StakingInterface;

  functions: {
    BONUS_MULTIPLIER(overrides?: CallOverrides): Promise<[BigNumber]>;

    adminWithDrawHorse(
      _receiver: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    adminWithDrawStable(
      _receiver: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claim(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimNativeToken(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimToken(
      _token: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositFacility(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositHorseInStable(
      _stableTokenId: BigNumberish,
      _horseTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositStable(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositStar(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    emergencyWithdrawHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getHorseInStable(
      _user: string,
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [[[BigNumber, BigNumber], [BigNumber, BigNumber]]] & {
        horses: [[BigNumber, BigNumber], [BigNumber, BigNumber]];
      }
    >;

    getMultiplier(
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPendingSpeed(
      _user: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPlotAvaliable(
      _user: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getPopularityInStable(
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getUserDepositHorse(
      _address: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([BigNumber, BigNumber, BigNumber, BigNumber] & {
          tokenId: BigNumber;
          lastRewardBlock: BigNumber;
          remainBlock: BigNumber;
          popularity: BigNumber;
        })[]
      ]
    >;

    getUserDepositHorseInStable(
      _address: string,
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([BigNumber, BigNumber, BigNumber, BigNumber] & {
          tokenId: BigNumber;
          lastRewardBlock: BigNumber;
          remainBlock: BigNumber;
          popularity: BigNumber;
        })[]
      ]
    >;

    getUserDepositStable(
      _address: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          ([BigNumber, BigNumber, BigNumber, BigNumber] & {
            tokenId: BigNumber;
            lastRewardBlock: BigNumber;
            remainBlock: BigNumber;
            popularity: BigNumber;
          })[],
          BigNumber,
          BigNumber
        ] & {
          tokenId: BigNumber;
          horses: ([BigNumber, BigNumber, BigNumber, BigNumber] & {
            tokenId: BigNumber;
            lastRewardBlock: BigNumber;
            remainBlock: BigNumber;
            popularity: BigNumber;
          })[];
          multiplier: BigNumber;
          popularity: BigNumber;
        })[]
      ]
    >;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    plot(overrides?: CallOverrides): Promise<[string]>;

    poolInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        totalStake: BigNumber;
        allocPoint: BigNumber;
        lastRewardBlock: BigNumber;
        accSpeedPerShare: BigNumber;
      }
    >;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPlotAddress(
      _plot: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setSpeedPerBlock(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    speed(overrides?: CallOverrides): Promise<[string]>;

    speedPerBlock(overrides?: CallOverrides): Promise<[BigNumber]>;

    starBalance(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    startBlock(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalAllocPoint(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateMultiplier(
      multiplierNumber: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatePool(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    userInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        totalHorse: BigNumber;
        amount: BigNumber;
        rewardDebt: BigNumber;
      }
    >;

    userPlots(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    withdrawFacility(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawHorseInStable(
      _stableTokenId: BigNumberish,
      _horseTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawStable(
      _stableTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawStar(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  BONUS_MULTIPLIER(overrides?: CallOverrides): Promise<BigNumber>;

  adminWithDrawHorse(
    _receiver: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  adminWithDrawStable(
    _receiver: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claim(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimNativeToken(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimToken(
    _token: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositFacility(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositHorse(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositHorseInStable(
    _stableTokenId: BigNumberish,
    _horseTokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositStable(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositStar(
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  emergencyWithdrawHorse(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getHorseInStable(
    _user: string,
    _stableId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[[BigNumber, BigNumber], [BigNumber, BigNumber]]>;

  getMultiplier(
    _from: BigNumberish,
    _to: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPendingSpeed(_user: string, overrides?: CallOverrides): Promise<BigNumber>;

  getPlotAvaliable(
    _user: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getPopularityInStable(
    _stableId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserDepositHorse(
    _address: string,
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, BigNumber, BigNumber, BigNumber] & {
      tokenId: BigNumber;
      lastRewardBlock: BigNumber;
      remainBlock: BigNumber;
      popularity: BigNumber;
    })[]
  >;

  getUserDepositHorseInStable(
    _address: string,
    _stableId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, BigNumber, BigNumber, BigNumber] & {
      tokenId: BigNumber;
      lastRewardBlock: BigNumber;
      remainBlock: BigNumber;
      popularity: BigNumber;
    })[]
  >;

  getUserDepositStable(
    _address: string,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      ([BigNumber, BigNumber, BigNumber, BigNumber] & {
        tokenId: BigNumber;
        lastRewardBlock: BigNumber;
        remainBlock: BigNumber;
        popularity: BigNumber;
      })[],
      BigNumber,
      BigNumber
    ] & {
      tokenId: BigNumber;
      horses: ([BigNumber, BigNumber, BigNumber, BigNumber] & {
        tokenId: BigNumber;
        lastRewardBlock: BigNumber;
        remainBlock: BigNumber;
        popularity: BigNumber;
      })[];
      multiplier: BigNumber;
      popularity: BigNumber;
    })[]
  >;

  onERC721Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  plot(overrides?: CallOverrides): Promise<string>;

  poolInfo(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      totalStake: BigNumber;
      allocPoint: BigNumber;
      lastRewardBlock: BigNumber;
      accSpeedPerShare: BigNumber;
    }
  >;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPlotAddress(
    _plot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setSpeedPerBlock(
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  speed(overrides?: CallOverrides): Promise<string>;

  speedPerBlock(overrides?: CallOverrides): Promise<BigNumber>;

  starBalance(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  startBlock(overrides?: CallOverrides): Promise<BigNumber>;

  totalAllocPoint(overrides?: CallOverrides): Promise<BigNumber>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateMultiplier(
    multiplierNumber: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updatePool(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  userInfo(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      totalHorse: BigNumber;
      amount: BigNumber;
      rewardDebt: BigNumber;
    }
  >;

  userPlots(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  withdrawFacility(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawHorse(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawHorseInStable(
    _stableTokenId: BigNumberish,
    _horseTokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawStable(
    _stableTokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawStar(
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    BONUS_MULTIPLIER(overrides?: CallOverrides): Promise<BigNumber>;

    adminWithDrawHorse(
      _receiver: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    adminWithDrawStable(
      _receiver: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claim(overrides?: CallOverrides): Promise<void>;

    claimNativeToken(overrides?: CallOverrides): Promise<void>;

    claimToken(_token: string, overrides?: CallOverrides): Promise<void>;

    depositFacility(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositHorse(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositHorseInStable(
      _stableTokenId: BigNumberish,
      _horseTokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositStable(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositStar(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    emergencyWithdrawHorse(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getHorseInStable(
      _user: string,
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber], [BigNumber, BigNumber]]>;

    getMultiplier(
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPendingSpeed(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPlotAvaliable(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPopularityInStable(
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserDepositHorse(
      _address: string,
      overrides?: CallOverrides
    ): Promise<
      ([BigNumber, BigNumber, BigNumber, BigNumber] & {
        tokenId: BigNumber;
        lastRewardBlock: BigNumber;
        remainBlock: BigNumber;
        popularity: BigNumber;
      })[]
    >;

    getUserDepositHorseInStable(
      _address: string,
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([BigNumber, BigNumber, BigNumber, BigNumber] & {
        tokenId: BigNumber;
        lastRewardBlock: BigNumber;
        remainBlock: BigNumber;
        popularity: BigNumber;
      })[]
    >;

    getUserDepositStable(
      _address: string,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        ([BigNumber, BigNumber, BigNumber, BigNumber] & {
          tokenId: BigNumber;
          lastRewardBlock: BigNumber;
          remainBlock: BigNumber;
          popularity: BigNumber;
        })[],
        BigNumber,
        BigNumber
      ] & {
        tokenId: BigNumber;
        horses: ([BigNumber, BigNumber, BigNumber, BigNumber] & {
          tokenId: BigNumber;
          lastRewardBlock: BigNumber;
          remainBlock: BigNumber;
          popularity: BigNumber;
        })[];
        multiplier: BigNumber;
        popularity: BigNumber;
      })[]
    >;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    plot(overrides?: CallOverrides): Promise<string>;

    poolInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        totalStake: BigNumber;
        allocPoint: BigNumber;
        lastRewardBlock: BigNumber;
        accSpeedPerShare: BigNumber;
      }
    >;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setPlotAddress(_plot: string, overrides?: CallOverrides): Promise<void>;

    setSpeedPerBlock(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    speed(overrides?: CallOverrides): Promise<string>;

    speedPerBlock(overrides?: CallOverrides): Promise<BigNumber>;

    starBalance(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    startBlock(overrides?: CallOverrides): Promise<BigNumber>;

    totalAllocPoint(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateMultiplier(
      multiplierNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updatePool(overrides?: CallOverrides): Promise<void>;

    userInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        totalHorse: BigNumber;
        amount: BigNumber;
        rewardDebt: BigNumber;
      }
    >;

    userPlots(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    withdrawFacility(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawHorse(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawHorseInStable(
      _stableTokenId: BigNumberish,
      _horseTokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawStable(
      _stableTokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawStar(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Claim(address,uint256)"(
      user?: string | null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    Claim(
      user?: string | null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    "ClaimNativeToken(address,uint256)"(
      user?: string | null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    ClaimNativeToken(
      user?: string | null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    "ClaimToken(address,address)"(
      user?: string | null,
      token?: null
    ): TypedEventFilter<[string, string], { user: string; token: string }>;

    ClaimToken(
      user?: string | null,
      token?: null
    ): TypedEventFilter<[string, string], { user: string; token: string }>;

    "DepositFacility(address,uint256,uint256)"(
      user?: string | null,
      tokenId?: null,
      popularity?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; tokenId: BigNumber; popularity: BigNumber }
    >;

    DepositFacility(
      user?: string | null,
      tokenId?: null,
      popularity?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; tokenId: BigNumber; popularity: BigNumber }
    >;

    "DepositHorse(address,uint256,uint256)"(
      user?: string | null,
      popularity?: null,
      tokenId?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; popularity: BigNumber; tokenId: BigNumber }
    >;

    DepositHorse(
      user?: string | null,
      popularity?: null,
      tokenId?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; popularity: BigNumber; tokenId: BigNumber }
    >;

    "DepositHorseInStable(address,uint256,uint256,uint256)"(
      user?: string | null,
      stableTokenId?: null,
      popularity?: null,
      horseTokenId?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      {
        user: string;
        stableTokenId: BigNumber;
        popularity: BigNumber;
        horseTokenId: BigNumber;
      }
    >;

    DepositHorseInStable(
      user?: string | null,
      stableTokenId?: null,
      popularity?: null,
      horseTokenId?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      {
        user: string;
        stableTokenId: BigNumber;
        popularity: BigNumber;
        horseTokenId: BigNumber;
      }
    >;

    "DepositStable(address,uint256)"(
      user?: string | null,
      tokenId?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; tokenId: BigNumber }
    >;

    DepositStable(
      user?: string | null,
      tokenId?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; tokenId: BigNumber }
    >;

    "DepositStar(address,uint256)"(
      user?: null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    DepositStar(
      user?: null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    "SetSpeedPerBlock(address,uint256)"(
      user?: null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    SetSpeedPerBlock(
      user?: null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    "UpdateMultiplier(uint256)"(
      multiplierNumber?: null
    ): TypedEventFilter<[BigNumber], { multiplierNumber: BigNumber }>;

    UpdateMultiplier(
      multiplierNumber?: null
    ): TypedEventFilter<[BigNumber], { multiplierNumber: BigNumber }>;

    "WithdrawFacility(address,uint256,uint256)"(
      user?: string | null,
      tokenId?: null,
      popularity?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; tokenId: BigNumber; popularity: BigNumber }
    >;

    WithdrawFacility(
      user?: string | null,
      tokenId?: null,
      popularity?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; tokenId: BigNumber; popularity: BigNumber }
    >;

    "WithdrawHorse(address,uint256,uint256)"(
      user?: string | null,
      tokenId?: null,
      popularity?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; tokenId: BigNumber; popularity: BigNumber }
    >;

    WithdrawHorse(
      user?: string | null,
      tokenId?: null,
      popularity?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; tokenId: BigNumber; popularity: BigNumber }
    >;

    "WithdrawHorseInStable(address,uint256,uint256,uint256)"(
      user?: string | null,
      stableTokenId?: null,
      popularity?: null,
      horseTokenId?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      {
        user: string;
        stableTokenId: BigNumber;
        popularity: BigNumber;
        horseTokenId: BigNumber;
      }
    >;

    WithdrawHorseInStable(
      user?: string | null,
      stableTokenId?: null,
      popularity?: null,
      horseTokenId?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      {
        user: string;
        stableTokenId: BigNumber;
        popularity: BigNumber;
        horseTokenId: BigNumber;
      }
    >;

    "WithdrawStable(address,uint256)"(
      user?: string | null,
      stableTokenId?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; stableTokenId: BigNumber }
    >;

    WithdrawStable(
      user?: string | null,
      stableTokenId?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; stableTokenId: BigNumber }
    >;

    "WithdrawStar(address,uint256)"(
      user?: null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;

    WithdrawStar(
      user?: null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { user: string; amount: BigNumber }
    >;
  };

  estimateGas: {
    BONUS_MULTIPLIER(overrides?: CallOverrides): Promise<BigNumber>;

    adminWithDrawHorse(
      _receiver: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    adminWithDrawStable(
      _receiver: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claim(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimNativeToken(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimToken(
      _token: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositFacility(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositHorseInStable(
      _stableTokenId: BigNumberish,
      _horseTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositStable(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositStar(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    emergencyWithdrawHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getHorseInStable(
      _user: string,
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMultiplier(
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPendingSpeed(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPlotAvaliable(
      _user: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getPopularityInStable(
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserDepositHorse(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserDepositHorseInStable(
      _address: string,
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserDepositStable(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    plot(overrides?: CallOverrides): Promise<BigNumber>;

    poolInfo(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPlotAddress(
      _plot: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setSpeedPerBlock(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    speed(overrides?: CallOverrides): Promise<BigNumber>;

    speedPerBlock(overrides?: CallOverrides): Promise<BigNumber>;

    starBalance(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    startBlock(overrides?: CallOverrides): Promise<BigNumber>;

    totalAllocPoint(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateMultiplier(
      multiplierNumber: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updatePool(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    userInfo(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    userPlots(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    withdrawFacility(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawHorseInStable(
      _stableTokenId: BigNumberish,
      _horseTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawStable(
      _stableTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawStar(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    BONUS_MULTIPLIER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    adminWithDrawHorse(
      _receiver: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    adminWithDrawStable(
      _receiver: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claim(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimNativeToken(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimToken(
      _token: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositFacility(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositHorseInStable(
      _stableTokenId: BigNumberish,
      _horseTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositStable(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositStar(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    emergencyWithdrawHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getHorseInStable(
      _user: string,
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMultiplier(
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPendingSpeed(
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPlotAvaliable(
      _user: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getPopularityInStable(
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserDepositHorse(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserDepositHorseInStable(
      _address: string,
      _stableId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserDepositStable(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    plot(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPlotAddress(
      _plot: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setSpeedPerBlock(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    speed(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    speedPerBlock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    starBalance(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    startBlock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalAllocPoint(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateMultiplier(
      multiplierNumber: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatePool(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    userInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userPlots(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawFacility(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawHorse(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawHorseInStable(
      _stableTokenId: BigNumberish,
      _horseTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawStable(
      _stableTokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawStar(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
